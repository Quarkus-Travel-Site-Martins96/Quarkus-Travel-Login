{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cookie-utils.ts","./src/app/login-form/login-form.component.ts","./src/app/login-form/login-form.component.html","./src/app/rest-service.ts","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACsB;AAGb;;;;;;;;;ICDnD,yEACE;IAAA,oFAA2D;IAA3C,gUAAyB;IAAC,4DAAiB;IAC7D,4DAAM;;ADCN,MAAM,WAAW,GAAW,8DAAI,GAAG,WAAW,CAAC;AAOxC,MAAM,YAAY;IAIxB,YAAoB,IAAiB,EAAU,OAAsB;QAAjD,SAAI,GAAJ,IAAI,CAAa;QAAU,YAAO,GAAP,OAAO,CAAe;QACpE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,SAAS,EAAE;YAEd,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAM,WAAW,EAAE,SAAS,EAAE,IAAI,gEAAW,CAAC;gBAC/D,cAAc,EAAE,YAAY;aAC5B,CAAC,CAAC;iBACF,SAAS,CAAC,GAAG,EAAE;gBACf,gCAAgC;gBAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,qEAAW,CAAC;YACpC,CAAC,EAAE,KAAK,CAAC,EAAE;gBACV,0CAA0C;gBAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzB,OAAO,CAAC,KAAK,CAAC,8CAA8C,EAAE,KAAK,CAAC;oBACpE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBAChB;qBAAM;oBACN,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC;oBACnD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBAChB;YACF,CAAC,CAAC;SACF;IACF,CAAC;IAED,SAAS,CAAC,GAAW;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,qEAAW,CAAC;IACpC,CAAC;;wEApCW,YAAY;4FAAZ,YAAY;QCbzB,yEACE;QAAA,yEAA2B;QAC7B,4DAAM;QACN,wGACE;;QADG,0DAAY;QAAZ,0EAAY;;6FDUJ,YAAY;cALxB,uDAAS;eAAC;gBACV,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aAClC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AAEE;AACgB;AACQ;AACf;AACL;;AAiB5C,MAAM,SAAS;;wFAAT,SAAS,cAFpB,2DAAY;4IAED,SAAS,mBAJV,CAAE,gEAAa,CAAE,YALnB;YACR,uEAAa;YACb,qEAAgB;YAChB,0DAAW;SACX;mIAKW,SAAS,mBAbpB,2DAAY;QACZ,2EAAgB;QAChB,mFAAkB,aAGlB,uEAAa;QACb,qEAAgB;QAChB,0DAAW;6FAMA,SAAS;cAfrB,sDAAQ;eAAC;gBACT,YAAY,EAAE;oBACb,2DAAY;oBACZ,2EAAgB;oBAChB,mFAAkB;iBAClB;gBACD,OAAO,EAAE;oBACR,uEAAa;oBACb,qEAAgB;oBAChB,0DAAW;iBACX;gBACD,SAAS,EAAE,CAAE,gEAAa,CAAE;gBAC5B,SAAS,EAAE;oBACV,2DAAY;iBAAC;aACd;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAA2C;;AAE3C,MAAM,cAAc,GAAU,uBAAuB,CAAC;AACtD,MAAM,0BAA0B,GAAU,GAAG,CAAC;AAMvC,MAAM,aAAa;IAGtB;QAFQ,gBAAW,GAAY,KAAK,CAAC;QAGjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC;IAC9D,CAAC;IAEM,SAAS,CAAC,IAAY;QACzB,IAAI,EAAE,GAAkB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,KAAK,GAAW,EAAE,CAAC,MAAM,CAAC;QAC9B,IAAI,UAAU,GAAG,GAAG,IAAI,GAAG,CAAC;QAC5B,IAAI,CAAS,CAAC;QAEd,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;YACvC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC5B,OAAO,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aACnD;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,YAAY,CAAC,IAAY;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAEM,SAAS,CAAC,IAAY,EAAE,KAAa,EAAE,UAAkB,EAAE,OAAe,EAAE;QAC/E,IAAI,CAAC,GAAQ,IAAI,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC1D,IAAI,OAAO,GAAU,WAAW,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;QAClD,IAAI,KAAK,GAAU,IAAI,CAAC,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,QAAQ,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,KAAK,OAAO,GAAG,KAAK,EAAE,CAAC;IAC7D,CAAC;IAEM,OAAO,CAAC,SAAkB,EAAE,CAAM;QACrC,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAAM,IAAI,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,GAAG,EAAE,0BAA0B,CAAC,CAAC;YAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,CAAC,CAAC,cAAc,EAAE,CAAC;SACtB;IACL,CAAC;;0EA1CQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFb,MAAM;6FAEN,aAAa;cAHzB,wDAAU;eAAC;gBACX,UAAU,EAAE,MAAM;aAClB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAEV;AACd;;;;;;;ICUlD,yEACC;IAAA,uEAAM;IAAA,iGAAsC;IAAA,4DAAO;IACpD,4DAAM;;ADRP,MAAM,QAAQ,GAAW,iEAAI,GAAG,QAAQ,CAAC;AAOlC,MAAM,kBAAkB;IAY9B,YAAoB,IAAiB,EAAU,OAAsB;QAAjD,SAAI,GAAJ,IAAI,CAAa;QAAU,YAAO,GAAP,OAAO,CAAe;QATrE,QAAG,GAAG,IAAI,0DAAY,EAAU,CAAC;QAKjC,iBAAY,GAAG,KAAK,CAAC;IAIoD,CAAC;IAEnE,KAAK;QACX,IAAI,IAAI,CAAC,QAAQ;YAChB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAE7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YACrD,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACvB,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;aAC1D,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE1B,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,wEAAW,CAAC;QACpC,CAAC,EAAE,KAAK,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;aAC5C;;gBAEA,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACV,IAAG,IAAI,CAAC,QAAQ;YACf,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;;oFA3CW,kBAAkB;kGAAlB,kBAAkB;QCd/B,yEACC;QAAA,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACd,0EACC;QADK,8IAAY,WAAO,IAAC;QACzB,yEACE;QAAA,2EAA4B;QAAA,mEAAQ;QAAA,4DAAQ;QAC5C,2EAEA;QADgC,yLAAuB;QADvD,4DAEA;QAAA,2EAA4B;QAAA,mEAAQ;QAAA,4DAAQ;QAC5C,4EAEA;QADgC,yLAAsB;QADtD,4DAEA;QAAA,6EAAwC;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAAA,4DAAS;QACrE,4DAAM;QACP,4DAAO;QACR,gHACC;QAEF,4DAAM;;QAV+B,0DAAuB;QAAvB,kFAAuB;QAGvB,0DAAsB;QAAtB,iFAAsB;QAIrD,0DAAoB;QAApB,kFAAoB;;6FDCb,kBAAkB;cAL9B,uDAAS;eAAC;gBACV,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aACzC;qLAIA,GAAG;kBADF,oDAAM;;;;;;;;;;;;;;AEhBR;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,WAAW;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kBAAkB,CAAC,GAAW,EAAE,IAAS,EAAE,OAAoB;QAC9D,OAAO;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;YAChC,OAAO;YACP,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACpB,CAAC,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,GAAW,EAAE,IAAY,EAAE,OAAoB;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;YAChC,OAAO;YACP,OAAO,EAAE,UAAU;SACnB,CAAC;IACH,CAAC;IAED,QAAQ,CAAI,GAAW,EAAE,IAAS,EAAE,OAAoB;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,GAAG,EAAE,IAAI,EAAE;YACnC,OAAO;YACP,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACpB,CAAC,CAAC;IACJ,CAAC;IAED,OAAO,CAAI,GAAW,EAAE,OAAoB;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE;YAC5B,OAAO;YACP,OAAO,EAAE,UAAU;SACnB,CAAC,CAAC;IACJ,CAAC;;sEAjCW,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFX,MAAM;6FAEN,WAAW;cAHvB,wDAAU;eAAC;gBACX,UAAU,EAAE,MAAM;aAClB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACD;AAE8C;;;;;;ICC/F,yEAAsC;IAAA,uEAAqB;IAAA,uEAAM;IAAA,gEAAK;IAAA,4DAAO;IAAA,4DAAI;IAAA,4DAAM;;;IAA9C,0DAAiB;IAAjB,8IAAiB;;;IAC1D,yEAAsC;IAAA,uEACrC;IAAA,oEACD;IAAA,4DAAI;IAAA,4DAAM;;;IAF+B,0DAA0B;IAA1B,uJAA0B;IAC7D,0DAAkB;IAAlB,+IAAkB;;ADEzB,MAAM,WAAW,GAAW,yEAAY,GAAG,WAAW,CAAC;AAOhD,MAAM,gBAAgB;IAW5B,YAAoB,SAAwB,EAAU,IAAiB;QAAnD,cAAS,GAAT,SAAS,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAa;QATvE,YAAO,GAAW,wEAAW,CAAC;QAC9B,aAAQ,GAAW,yEAAY,CAAC;QAChC,sBAAiB,GAAW,kFAAqB,CAAC;QAQjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAGE,QAAQ;QACV,IAAI,IAAI,CAAC,GAAG;YACZ,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,SAAS,EAAE;YAEnB,8BAA8B;YAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAM,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,gEAAW,CAAC;gBAC/E,cAAc,EAAE,YAAY;aAC5B,CAAC,CAAC;iBACF,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACnB,gCAAgC;gBAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACV,0CAA0C;gBAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzB,OAAO,CAAC,KAAK,CAAC,8CAA8C,EAAE,KAAK,CAAC;oBACpE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;oBACxC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBAChB;qBAAM;oBACN,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC;oBACnD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBAChB;YACF,CAAC,CAAC;SACF;IACF,CAAC;;gFAzCW,gBAAgB;gGAAhB,gBAAgB;QCf7B,yEACC;QAAA,yEAAkB;QAAA,uEAAoB;QAAA,uEAAM;QAAA,+DAAI;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAM;QACjE,yEAAmB;QAAA,uEAAY;QAAA,uEAAM;QAAA,iEAAM;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAM;QAE5D,4GAAsC;QACtC,8GAAsC;QAGvC,4DAAM;;QAPgB,0DAAgB;QAAhB,0IAAgB;QAGhC,0DAAkB;QAAlB,gFAAkB;QAClB,0DAAiB;QAAjB,+EAAiB;;6FDUV,gBAAgB;cAL5B,uDAAS;eAAC;gBACV,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACtC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEK,MAAM,IAAI,GAAG,uBAAuB,CAAC;AACrC,MAAM,WAAW,GAAW,uBAAuB,CAAC;AACpD,MAAM,YAAY,GAAW,uBAAuB,CAAC;AACrD,MAAM,YAAY,GAAW,uBAAuB,CAAC;AACrD,MAAM,qBAAqB,GAAW,uBAAuB,CAAC;AAErE;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACrBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { host, homePageUrl } from '../environments/environment';\r\nimport { RestService } from './rest-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nconst validateUrl: string = host + '/validate';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    \r\n\tpublic jwt: string;\r\n\t\r\n\tconstructor(private rest: RestService, private cookies: CookieService) { \r\n\t\tthis.jwt = null;\r\n\t\tlet cookieJWT = this.cookies.get('user.jwt');\r\n\t\tif (cookieJWT) {\r\n\t\t\t\r\n\t\t\t//JWT found, check if is valid\r\n\t\t\tthis.rest.sendPost<any>(validateUrl, cookieJWT, new HttpHeaders({\r\n\t\t\t\t'content-type': 'text/plain'\r\n\t\t\t}))\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\t//JWT correct, move to Home Page\r\n\t\t\t\twindow.location.href = homePageUrl;\r\n\t\t\t}, error => {\r\n\t\t\t\t//JWT non correct or service not available\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\tconsole.error('The token JWT is not valid, relogin required', error)\r\n\t\t\t\t\tthis.cookies.delete('user.jwt');\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('The call is not end correct', error)\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateJWT(jwt: string): void {\r\n\t\tthis.jwt = jwt;\r\n\t}\r\n\t\r\n\tpublic goToHome() {\r\n\t\twindow.location.href = homePageUrl;\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n","<div class=\"toolbar\">\r\n  <app-toolbar></app-toolbar>\r\n</div>\r\n<div *ngIf=\"!jwt\" class=\"content\" role=\"main\">\r\n  <app-login-form (jwt)=\"updateJWT($event)\"></app-login-form>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tToolbarComponent,\r\n\t\tLoginFormComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule\r\n\t],\r\n\tproviders: [ CookieService ],\r\n\tbootstrap: [\r\n\t\tAppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst COOKIE_CONSENT: string= 'allowed-cookie-banner';\r\nconst COOKIE_CONSENT_EXPIRE_DAYS: number= 180;\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CookieManager {\r\n    private isConsented: boolean = false;\r\n\r\n    constructor() {\r\n        this.isConsented = this.getCookie(COOKIE_CONSENT) === '1';\r\n    }\r\n\r\n    public getCookie(name: string) {\r\n        let ca: Array<string> = document.cookie.split(';');\r\n        let caLen: number = ca.length;\r\n        let cookieName = `${name}=`;\r\n        let c: string;\r\n\r\n        for (let i: number = 0; i < caLen; i += 1) {\r\n            c = ca[i].replace(/^\\s+/g, '');\r\n            if (c.indexOf(cookieName) == 0) {\r\n                return c.substring(cookieName.length, c.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public deleteCookie(name: string) {\r\n        this.setCookie(name, '', -1);\r\n    }\r\n\r\n    public setCookie(name: string, value: string, expireDays: number, path: string = '') {\r\n        let d:Date = new Date();\r\n        d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n        let expires:string = `expires=${d.toUTCString()}`;\r\n        let cpath:string = path ? `; path=${path}` : '';\r\n        document.cookie = `${name}=${value}; ${expires}${cpath}`;\r\n    }\r\n\r\n    public consent(isConsent: boolean, e: any) {\r\n        if (!isConsent) {\r\n            return this.isConsented;\r\n        } else if (isConsent) {\r\n            this.setCookie(COOKIE_CONSENT, '1', COOKIE_CONSENT_EXPIRE_DAYS);\r\n            this.isConsented = true;\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}","import { Component, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { RestService } from '../rest-service';\r\nimport { homePageUrl, host } from 'src/environments/environment';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst loginUrl: string = host + '/login';\r\n\r\n@Component({\r\n\tselector: 'app-login-form',\r\n\ttemplateUrl: './login-form.component.html',\r\n\tstyleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnDestroy {\r\n\r\n\t@Output()\r\n\tjwt = new EventEmitter<string>();\r\n\r\n\tuserInput: string;\r\n\tpwdInput: string;\r\n\t\r\n\tdisplayError = false;\r\n\r\n\tprivate loginSub: Subscription;\r\n\r\n\tconstructor(private rest: RestService, private cookies: CookieService) { }\r\n\r\n\tpublic login(): void {\r\n\t\tif (this.loginSub)\r\n\t\t\tthis.loginSub.unsubscribe();\r\n\r\n\t\tthis.loginSub = this.rest.sendPostGetRawText(loginUrl, {\r\n\t\t\t\tusername: this.userInput,\r\n\t\t\t\tpassword: this.pwdInput\r\n\t\t\t}, new HttpHeaders({ 'content-type': 'application/json' }))\r\n\t\t\t.subscribe(response => {\r\n\t\t\t\tthis.jwt.emit(response.body);\r\n\t\t\t\tthis.cookies.delete('user.jwt');\r\n\t\t\t\tthis.cookies.set('user.jwt', response.body);\r\n\t\t\t\tthis.displayError = false;\r\n\t\t\t\t\r\n\t\t\t\twindow.location.href = homePageUrl;\r\n\t\t\t}, error => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tif (error.status === 403) {\r\n\t\t\t\t\tthis.displayError = true;\r\n\t\t\t\t\tconsole.log('Credential not valid ', error);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.log('Error in call, status ', error);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tngOnDestroy(): void {\r\n\t\tif(this.loginSub)\r\n\t\t\tthis.loginSub.unsubscribe();\r\n\t}\r\n\r\n}\r\n","<div class=\"login-content\">\r\n\t<h1>Login:</h1>\r\n\t\t<form (ngSubmit)=\"login()\">\r\n\t\t\t<div class=\"login-form\">\r\n\t\t\t\t\t<label for=\"username-input\">username</label>\r\n\t\t\t\t\t<input type=\"text\" class=\"login-input-text\" \r\n\t\t\t\t\t\t\tid=\"username\" name=\"username\" [(ngModel)]=\"userInput\" />\r\n\t\t\t\t\t<label for=\"password-input\">password</label>\r\n\t\t\t\t\t<input type=\"password\" class=\"login-input-text\" \r\n\t\t\t\t\t\t\tid=\"password\" name=\"password\" [(ngModel)]=\"pwdInput\" />\r\n\t\t\t\t\t<button type=\"submit\" class=\"login-btn\"><span>Login</span></button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t<div *ngIf=\"displayError\" class=\"error-login\">\r\n\t\t<span>Login error, credentials are not valid</span>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tsendPostGetRawText(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\r\n\tsendPostWithString(url: string, body: string, headers: HttpHeaders): Observable<HttpResponse<any>> {\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t})\r\n\t}\r\n\t\r\n\tsendPost<T>(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.post<T>(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'json'\r\n\t\t});\r\n\t}\r\n\t\r\n\tsendGet<T>(url: string, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.get<T>(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { homePageUrl, loginPageUrl, userManagementPageUrl } from 'src/environments/environment';\r\nimport { CookieManager } from '../cookie-utils';\r\nimport { RestService } from '../rest-service';\r\nimport { JWT } from './jwt-decode-vo';\n\nconst validateUrl: string = loginPageUrl + \"/validate\";\r\n\n@Component({\n\tselector: 'app-toolbar',\n\ttemplateUrl: './toolbar.component.html',\n\tstyleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n\thomeUrl: string = homePageUrl;\n\tloginUrl: string = loginPageUrl;\n\tuserManagementUrl: string = userManagementPageUrl;\n\t\n\tjwt: JWT;\r\n\tcookieJWT: string;\r\n\t\r\n\tprivate sub: Subscription;\n\n\tconstructor(private cookieMng: CookieManager, private rest: RestService) {\r\n\t\tthis.cookieJWT = this.cookieMng.getCookie('user.jwt');\n\t}\r\n\t\r\n\t\n    ngOnInit(): void {\r\n\t\tif (this.sub)\r\n\t\tthis.sub.unsubscribe();\r\n\t\r\n\t\tif (this.cookieJWT) {\r\n\t\t\t\r\n\t\t\t//JWT found, check if is valid\r\n\t\t\tthis.sub = this.rest.sendPost<JWT>(validateUrl, this.cookieJWT, new HttpHeaders({\r\n\t\t\t\t'content-type': 'text/plain'\r\n\t\t\t}))\r\n\t\t\t.subscribe((resp) => {\r\n\t\t\t\t//JWT correct, move to Home Page\r\n\t\t\t\tthis.jwt = resp.body;\r\n\t\t\t}, error => {\r\n\t\t\t\t//JWT non correct or service not available\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\tconsole.error('The token JWT is not valid, relogin required', error)\r\n\t\t\t\t\tthis.cookieMng.deleteCookie('user.jwt');\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('The call is not end correct', error)\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\n\n}\n","<div class=\"toolbar\">\n\t<div class=\"logo\"><a [href]=\"homeUrl\"><span>LOGO</span></a></div>\n\t<div class=\"offer\"><a href=\"/\"><span>OFFERS</span></a></div>\n\t\n\t<div *ngIf=\"!cookieJWT\" class=\"login\"><a [href]=\"loginUrl\"><span>LOGIN</span></a></div>\n\t<div *ngIf=\"cookieJWT\" class=\"logged\"><a [href]=\"userManagementUrl\">\n\t\t<img [src]=\"jwt.avatar\" [alt]=\"jwt.name\" />\n\t</a></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\nexport const host = 'http://localhost:7070';\r\nexport const homePageUrl: string = 'http://localhost:8080';\r\nexport const urlHotelBase: string = 'http://localhost:8081';\r\nexport const loginPageUrl: string = \"http://localhost:7070\";\r\nexport const userManagementPageUrl: string = \"http://localhost:7071\";\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}