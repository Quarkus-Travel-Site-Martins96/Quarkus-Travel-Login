{"version":3,"sources":["webpack:///src/app/toolbar/toolbar.component.ts","webpack:///src/app/toolbar/toolbar.component.html","webpack:///src/app/login-form/login-form.component.ts","webpack:///src/app/login-form/login-form.component.html","webpack:///src/app/cookie-utils.ts","webpack:///src/environments/environment.ts","webpack:///src/app/toolbar/jwt-decode-vo.ts","webpack:///src/app/rest-service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["validateUrl","ToolbarComponent","cookieMng","rest","homeUrl","loginUrl","userManagementUrl","jwt","cookieJWT","getCookie","sub","unsubscribe","sendPost","subscribe","resp","body","error","status","console","logout","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","document","getElementById","style","top","deleteCookie","location","href","LoginFormComponent","cookies","displayError","loginSub","sendPostGetRawText","username","userInput","password","pwdInput","response","emit","set","log","login","COOKIE_CONSENT","COOKIE_CONSENT_EXPIRE_DAYS","CookieManager","isConsented","name","ca","cookie","split","caLen","length","cookieName","c","i","replace","indexOf","substring","setCookie","value","expireDays","path","d","Date","setTime","getTime","expires","toUTCString","cpath","isConsent","e","preventDefault","environment","production","host","homePageUrl","urlHotelBase","loginPageUrl","userManagementPageUrl","JWT","RestService","http","url","headers","post","observe","responseType","get","AppComponent","AppModule","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { homePageUrl, loginPageUrl, userManagementPageUrl } from 'src/environments/environment';\r\nimport { CookieManager } from '../cookie-utils';\r\nimport { RestService } from '../rest-service';\r\nimport { JWT } from './jwt-decode-vo';\n\nconst validateUrl: string = loginPageUrl + \"/validate\";\r\n\n@Component({\n\tselector: 'app-toolbar',\n\ttemplateUrl: './toolbar.component.html',\n\tstyleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit, AfterViewInit {\n\n\thomeUrl: string = homePageUrl;\n\tloginUrl: string = loginPageUrl;\n\tuserManagementUrl: string = userManagementPageUrl;\n\n\tjwt: JWT = new JWT();\r\n\tcookieJWT: string;\r\n\r\n\tprivate sub: Subscription;\n\n\tconstructor(private cookieMng: CookieManager, private rest: RestService) {\r\n\t\tthis.cookieJWT = this.cookieMng.getCookie('user.jwt');\n\t}\r\n\r\n\n\tngOnInit(): void {\r\n\t\tif (this.sub)\r\n\t\t\tthis.sub.unsubscribe();\r\n\r\n\t\tif (this.cookieJWT) {\r\n\t\t\t\r\n\t\t\t//JWT found, check if is valid\r\n\t\t\tthis.sub = this.rest.sendPost<JWT>(validateUrl, this.cookieJWT, new HttpHeaders({\r\n\t\t\t\t'content-type': 'text/plain'\r\n\t\t\t}))\r\n\t\t\t\t.subscribe((resp) => {\r\n\t\t\t\t\t//JWT correct, move to Home Page\r\n\t\t\t\t\tthis.jwt = resp.body;\r\n\t\t\t\t}, error => {\r\n\t\t\t\t\t//JWT non correct or service not available\r\n\t\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\t\tconsole.error('The token JWT is not valid, relogin required', error)\r\n\t\t\t\t\t\tthis.logout();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('The call is not end correct', error)\r\n\t\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tlet prevScrollpos = window.pageYOffset;\r\n\t\twindow.onscroll = function() {\r\n\t\t\tvar currentScrollPos = window.pageYOffset;\r\n\t\t\tif (prevScrollpos > currentScrollPos) {\r\n\t\t\t\tdocument.getElementById(\"navbar\").style.top = \"0\";\r\n\t\t\t} else {\r\n\t\t\t\tdocument.getElementById(\"navbar\").style.top = \"-80px\";\r\n\t\t\t}\r\n\t\t\tprevScrollpos = currentScrollPos;\r\n\t\t}\r\n\t}\r\n\t\r\n\tlogout(): void {\r\n\t\tthis.cookieMng.deleteCookie('user.jwt');\r\n\t\twindow.top.location.href = this.homeUrl;\r\n\t}\n\n}\n","<header class=\"u-clearfix header\" id=\"navbar\">\n\t<div class=\"container\">\n\t\t<nav>\n\t\t\t<div class=\"logo\"><a [href]=\"homeUrl\"><span>LOGO</span></a></div>\n\t\t\t\n\t\t\t<div *ngIf=\"!cookieJWT\" class=\"login\"><a [href]=\"loginUrl\"><span>LOGIN</span></a></div>\n\t\t\t<div *ngIf=\"cookieJWT\" class=\"logged\">\n\t\t\t\t<div class=\"user-mngmnt\">\n\t\t\t\t\t<a [href]=\"userManagementUrl\">Edit user</a>\n\t\t\t\t\t<a [href]=\"homeUrl\" (click)=\"logout()\">Logout</a>\n\t\t\t\t</div>\n\t\t\t\t<img [src]=\"jwt.avatar\" [alt]=\"jwt.name\" />\n\t\t\t</div>\n\t\t</nav>\n\t</div>\n</header>\n","import { Component, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { RestService } from '../rest-service';\r\nimport { homePageUrl, host } from 'src/environments/environment';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst loginUrl: string = host + '/login';\r\n\r\n@Component({\r\n\tselector: 'app-login-form',\r\n\ttemplateUrl: './login-form.component.html',\r\n\tstyleUrls: ['./login-form.component.css', 'login-form.background.components.less']\r\n})\r\nexport class LoginFormComponent implements OnDestroy {\r\n\r\n\t@Output()\r\n\tjwt = new EventEmitter<string>();\r\n\r\n\tuserInput: string;\r\n\tpwdInput: string;\r\n\t\r\n\tdisplayError = false;\r\n\r\n\tprivate loginSub: Subscription;\r\n\r\n\tconstructor(private rest: RestService, private cookies: CookieService) { }\r\n\r\n\tpublic login(): void {\r\n\t\tif (this.loginSub)\r\n\t\t\tthis.loginSub.unsubscribe();\r\n\r\n\t\tthis.loginSub = this.rest.sendPostGetRawText(loginUrl, {\r\n\t\t\t\tusername: this.userInput,\r\n\t\t\t\tpassword: this.pwdInput\r\n\t\t\t}, new HttpHeaders({ 'content-type': 'application/json' }))\r\n\t\t\t.subscribe(response => {\r\n\t\t\t\tthis.jwt.emit(response.body);\r\n\t\t\t\tthis.cookies.delete('user.jwt');\r\n\t\t\t\tthis.cookies.set('user.jwt', response.body);\r\n\t\t\t\tthis.displayError = false;\r\n\t\t\t\t\r\n\t\t\t\twindow.location.href = homePageUrl;\r\n\t\t\t}, error => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tif (error.status === 403) {\r\n\t\t\t\t\tthis.displayError = true;\r\n\t\t\t\t\tthis.userInput = \"\";\r\n\t\t\t\t\tthis.pwdInput = \"\";\r\n\t\t\t\t\tconsole.log('Credential not valid ', error);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.log('Error in call, status ', error);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tngOnDestroy(): void {\r\n\t\tif(this.loginSub)\r\n\t\t\tthis.loginSub.unsubscribe();\r\n\t}\r\n\r\n}\r\n","<div class=\"login-content\">\r\n\t<h1>Login:</h1>\r\n\t\t<div class=\"container\">\r\n\t\t\t<form (ngSubmit)=\"login()\">\r\n\t\t\t\t<div class=\"login-form\">\r\n\t\t\t\t\t\t<label for=\"username-input\">username</label>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"login-input-text\" \r\n\t\t\t\t\t\t\t\tid=\"username\" name=\"username\" [(ngModel)]=\"userInput\" />\r\n\t\t\t\t\t\t<label for=\"password-input\">password</label>\r\n\t\t\t\t\t\t<input type=\"password\" class=\"login-input-text\" \r\n\t\t\t\t\t\t\t\tid=\"password\" name=\"password\" [(ngModel)]=\"pwdInput\" />\r\n\t\t\t\t\t\t<button type=\"submit\" class=\"login-btn\"><span>Login</span></button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t<div *ngIf=\"displayError\" class=\"error-login\">\r\n\t\t<span>Login error, credentials are not valid</span>\r\n\t</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst COOKIE_CONSENT: string= 'allowed-cookie-banner';\r\nconst COOKIE_CONSENT_EXPIRE_DAYS: number= 180;\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CookieManager {\r\n    private isConsented: boolean = false;\r\n\r\n    constructor() {\r\n        this.isConsented = this.getCookie(COOKIE_CONSENT) === '1';\r\n    }\r\n\r\n    public getCookie(name: string) {\r\n        let ca: Array<string> = document.cookie.split(';');\r\n        let caLen: number = ca.length;\r\n        let cookieName = `${name}=`;\r\n        let c: string;\r\n\r\n        for (let i: number = 0; i < caLen; i += 1) {\r\n            c = ca[i].replace(/^\\s+/g, '');\r\n            if (c.indexOf(cookieName) == 0) {\r\n                return c.substring(cookieName.length, c.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public deleteCookie(name: string) {\r\n        this.setCookie(name, '', -1);\r\n    }\r\n\r\n    public setCookie(name: string, value: string, expireDays: number, path: string = '') {\r\n        let d:Date = new Date();\r\n        d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n        let expires:string = `expires=${d.toUTCString()}`;\r\n        let cpath:string = path ? `; path=${path}` : '';\r\n        document.cookie = `${name}=${value}; ${expires}${cpath}`;\r\n    }\r\n\r\n    public consent(isConsent: boolean, e: any) {\r\n        if (!isConsent) {\r\n            return this.isConsented;\r\n        } else if (isConsent) {\r\n            this.setCookie(COOKIE_CONSENT, '1', COOKIE_CONSENT_EXPIRE_DAYS);\r\n            this.isConsented = true;\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\nexport const host = 'http://localhost:7070';\r\nexport const homePageUrl: string = 'http://localhost:8080';\r\nexport const urlHotelBase: string = 'http://localhost:8081';\r\nexport const loginPageUrl: string = \"http://localhost:7070\";\r\nexport const userManagementPageUrl: string = \"http://localhost:7071\";\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class JWT {\r\n\tiss: string;\r\n    upn: string;\r\n    groups: string[];\r\n    birthdate: string;\r\n    email: string;\r\n    name: string;\r\n    surname: string;\r\n    country: string;\r\n\tavatar: string;\r\n    iat: number;\r\n    exp: number;\r\n    jti: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tsendPostGetRawText(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\r\n\tsendPostWithString(url: string, body: string, headers: HttpHeaders): Observable<HttpResponse<any>> {\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t})\r\n\t}\r\n\t\r\n\tsendPost<T>(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.post<T>(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'json'\r\n\t\t});\r\n\t}\r\n\t\r\n\tsendGet<T>(url: string, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.get<T>(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { host, homePageUrl } from '../environments/environment';\r\nimport { RestService } from './rest-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nconst validateUrl: string = host + '/validate';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css', './app.component-effects.less']\r\n})\r\nexport class AppComponent {\r\n    \r\n\tpublic jwt: string;\r\n\t\r\n\tconstructor(private rest: RestService, private cookies: CookieService) { \r\n\t\tthis.jwt = null;\r\n\t\tlet cookieJWT = this.cookies.get('user.jwt');\r\n\t\tif (cookieJWT) {\r\n\t\t\t\r\n\t\t\t//JWT found, check if is valid\r\n\t\t\tthis.rest.sendPost<any>(validateUrl, cookieJWT, new HttpHeaders({\r\n\t\t\t\t'content-type': 'text/plain'\r\n\t\t\t}))\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\t//JWT correct, move to Home Page\r\n\t\t\t\twindow.location.href = homePageUrl;\r\n\t\t\t}, error => {\r\n\t\t\t\t//JWT non correct or service not available\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\tconsole.error('The token JWT is not valid, relogin required', error)\r\n\t\t\t\t\tthis.cookies.delete('user.jwt');\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('The call is not end correct', error)\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateJWT(jwt: string): void {\r\n\t\tthis.jwt = jwt;\r\n\t}\r\n\t\r\n\tpublic goToHome() {\r\n\t\twindow.location.href = homePageUrl;\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n","<div class=\"toolbar\">\r\n\t<app-toolbar></app-toolbar>\r\n</div>\r\n<div *ngIf=\"!jwt\" class=\"content\" role=\"main\">\r\n\t<app-login-form (jwt)=\"updateJWT($event)\"></app-login-form>\r\n\t<ul class=\"bg-bubbles clear\">\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t\t<li></li>\r\n\t</ul>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tToolbarComponent,\r\n\t\tLoginFormComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule\r\n\t],\r\n\tproviders: [ CookieService ],\r\n\tbootstrap: [\r\n\t\tAppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}