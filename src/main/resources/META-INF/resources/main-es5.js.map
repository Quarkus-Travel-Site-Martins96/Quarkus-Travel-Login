{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cookie-utils.ts","webpack:///src/app/login-form/login-form.component.ts","webpack:///src/app/login-form/login-form.component.html","webpack:///src/app/rest-service.ts","webpack:///src/app/toolbar/toolbar.component.ts","webpack:///src/app/toolbar/toolbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","validateUrl","AppComponent","rest","cookies","jwt","cookieJWT","get","sendPost","subscribe","window","location","href","error","status","console","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","COOKIE_CONSENT","COOKIE_CONSENT_EXPIRE_DAYS","CookieManager","isConsented","getCookie","name","ca","document","cookie","split","caLen","length","cookieName","c","i","replace","indexOf","substring","setCookie","value","expireDays","path","d","Date","setTime","getTime","expires","toUTCString","cpath","isConsent","preventDefault","providedIn","loginUrl","LoginFormComponent","displayError","loginSub","unsubscribe","sendPostGetRawText","username","userInput","password","pwdInput","response","emit","body","set","log","login","RestService","http","url","headers","post","observe","responseType","ToolbarComponent","cookieMng","homeUrl","userManagementUrl","sub","resp","deleteCookie","environment","production","host","homePageUrl","urlHotelBase","loginPageUrl","userManagementPageUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { host, homePageUrl } from '../environments/environment';\r\nimport { RestService } from './rest-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nconst validateUrl: string = host + '/validate';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    \r\n\tpublic jwt: string;\r\n\t\r\n\tconstructor(private rest: RestService, private cookies: CookieService) { \r\n\t\tthis.jwt = null;\r\n\t\tlet cookieJWT = this.cookies.get('user.jwt');\r\n\t\tif (cookieJWT) {\r\n\t\t\t\r\n\t\t\t//JWT found, check if is valid\r\n\t\t\tthis.rest.sendPost<any>(validateUrl, cookieJWT, new HttpHeaders({\r\n\t\t\t\t'content-type': 'text/plain'\r\n\t\t\t}))\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\t//JWT correct, move to Home Page\r\n\t\t\t\twindow.location.href = homePageUrl;\r\n\t\t\t}, error => {\r\n\t\t\t\t//JWT non correct or service not available\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\tconsole.error('The token JWT is not valid, relogin required', error)\r\n\t\t\t\t\tthis.cookies.delete('user.jwt');\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('The call is not end correct', error)\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdateJWT(jwt: string): void {\r\n\t\tthis.jwt = jwt;\r\n\t}\r\n\t\r\n\tpublic goToHome() {\r\n\t\twindow.location.href = homePageUrl;\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n","<div class=\"toolbar\">\r\n  <app-toolbar></app-toolbar>\r\n</div>\r\n<div *ngIf=\"!jwt\" class=\"content\" role=\"main\">\r\n  <app-login-form (jwt)=\"updateJWT($event)\"></app-login-form>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tToolbarComponent,\r\n\t\tLoginFormComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tHttpClientModule,\r\n\t\tFormsModule\r\n\t],\r\n\tproviders: [ CookieService ],\r\n\tbootstrap: [\r\n\t\tAppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst COOKIE_CONSENT: string= 'allowed-cookie-banner';\r\nconst COOKIE_CONSENT_EXPIRE_DAYS: number= 180;\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CookieManager {\r\n    private isConsented: boolean = false;\r\n\r\n    constructor() {\r\n        this.isConsented = this.getCookie(COOKIE_CONSENT) === '1';\r\n    }\r\n\r\n    public getCookie(name: string) {\r\n        let ca: Array<string> = document.cookie.split(';');\r\n        let caLen: number = ca.length;\r\n        let cookieName = `${name}=`;\r\n        let c: string;\r\n\r\n        for (let i: number = 0; i < caLen; i += 1) {\r\n            c = ca[i].replace(/^\\s+/g, '');\r\n            if (c.indexOf(cookieName) == 0) {\r\n                return c.substring(cookieName.length, c.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public deleteCookie(name: string) {\r\n        this.setCookie(name, '', -1);\r\n    }\r\n\r\n    public setCookie(name: string, value: string, expireDays: number, path: string = '') {\r\n        let d:Date = new Date();\r\n        d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n        let expires:string = `expires=${d.toUTCString()}`;\r\n        let cpath:string = path ? `; path=${path}` : '';\r\n        document.cookie = `${name}=${value}; ${expires}${cpath}`;\r\n    }\r\n\r\n    public consent(isConsent: boolean, e: any) {\r\n        if (!isConsent) {\r\n            return this.isConsented;\r\n        } else if (isConsent) {\r\n            this.setCookie(COOKIE_CONSENT, '1', COOKIE_CONSENT_EXPIRE_DAYS);\r\n            this.isConsented = true;\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}","import { Component, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { RestService } from '../rest-service';\r\nimport { homePageUrl, host } from 'src/environments/environment';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst loginUrl: string = host + '/login';\r\n\r\n@Component({\r\n\tselector: 'app-login-form',\r\n\ttemplateUrl: './login-form.component.html',\r\n\tstyleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnDestroy {\r\n\r\n\t@Output()\r\n\tjwt = new EventEmitter<string>();\r\n\r\n\tuserInput: string;\r\n\tpwdInput: string;\r\n\t\r\n\tdisplayError = false;\r\n\r\n\tprivate loginSub: Subscription;\r\n\r\n\tconstructor(private rest: RestService, private cookies: CookieService) { }\r\n\r\n\tpublic login(): void {\r\n\t\tif (this.loginSub)\r\n\t\t\tthis.loginSub.unsubscribe();\r\n\r\n\t\tthis.loginSub = this.rest.sendPostGetRawText(loginUrl, {\r\n\t\t\t\tusername: this.userInput,\r\n\t\t\t\tpassword: this.pwdInput\r\n\t\t\t}, new HttpHeaders({ 'content-type': 'application/json' }))\r\n\t\t\t.subscribe(response => {\r\n\t\t\t\tthis.jwt.emit(response.body);\r\n\t\t\t\tthis.cookies.delete('user.jwt');\r\n\t\t\t\tthis.cookies.set('user.jwt', response.body);\r\n\t\t\t\tthis.displayError = false;\r\n\t\t\t\t\r\n\t\t\t\twindow.location.href = homePageUrl;\r\n\t\t\t}, error => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t\tif (error.status === 403) {\r\n\t\t\t\t\tthis.displayError = true;\r\n\t\t\t\t\tconsole.log('Credential not valid ', error);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.log('Error in call, status ', error);\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tngOnDestroy(): void {\r\n\t\tif(this.loginSub)\r\n\t\t\tthis.loginSub.unsubscribe();\r\n\t}\r\n\r\n}\r\n","<div class=\"login-content\">\r\n\t<h1>Login:</h1>\r\n\t\t<form (ngSubmit)=\"login()\">\r\n\t\t\t<div class=\"login-form\">\r\n\t\t\t\t\t<label for=\"username-input\">username</label>\r\n\t\t\t\t\t<input type=\"text\" class=\"login-input-text\" \r\n\t\t\t\t\t\t\tid=\"username\" name=\"username\" [(ngModel)]=\"userInput\" />\r\n\t\t\t\t\t<label for=\"password-input\">password</label>\r\n\t\t\t\t\t<input type=\"password\" class=\"login-input-text\" \r\n\t\t\t\t\t\t\tid=\"password\" name=\"password\" [(ngModel)]=\"pwdInput\" />\r\n\t\t\t\t\t<button type=\"submit\" class=\"login-btn\"><span>Login</span></button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t<div *ngIf=\"displayError\" class=\"error-login\">\r\n\t\t<span>Login error, credentials are not valid</span>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tsendPostGetRawText(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\r\n\tsendPostWithString(url: string, body: string, headers: HttpHeaders): Observable<HttpResponse<any>> {\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t})\r\n\t}\r\n\t\r\n\tsendPost<T>(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.post<T>(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'json'\r\n\t\t});\r\n\t}\r\n\t\r\n\tsendGet<T>(url: string, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.get<T>(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\r\nimport { homePageUrl, loginPageUrl, userManagementPageUrl } from 'src/environments/environment';\r\nimport { CookieManager } from '../cookie-utils';\r\nimport { RestService } from '../rest-service';\r\nimport { JWT } from './jwt-decode-vo';\n\nconst validateUrl: string = loginPageUrl + \"/validate\";\r\n\n@Component({\n\tselector: 'app-toolbar',\n\ttemplateUrl: './toolbar.component.html',\n\tstyleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n\thomeUrl: string = homePageUrl;\n\tloginUrl: string = loginPageUrl;\n\tuserManagementUrl: string = userManagementPageUrl;\n\t\n\tjwt: JWT;\r\n\tcookieJWT: string;\r\n\t\r\n\tprivate sub: Subscription;\n\n\tconstructor(private cookieMng: CookieManager, private rest: RestService) {\r\n\t\tthis.cookieJWT = this.cookieMng.getCookie('user.jwt');\n\t}\r\n\t\r\n\t\n    ngOnInit(): void {\r\n\t\tif (this.sub)\r\n\t\tthis.sub.unsubscribe();\r\n\t\r\n\t\tif (this.cookieJWT) {\r\n\t\t\t\r\n\t\t\t//JWT found, check if is valid\r\n\t\t\tthis.sub = this.rest.sendPost<JWT>(validateUrl, this.cookieJWT, new HttpHeaders({\r\n\t\t\t\t'content-type': 'text/plain'\r\n\t\t\t}))\r\n\t\t\t.subscribe((resp) => {\r\n\t\t\t\t//JWT correct, move to Home Page\r\n\t\t\t\tthis.jwt = resp.body;\r\n\t\t\t}, error => {\r\n\t\t\t\t//JWT non correct or service not available\r\n\t\t\t\tif (error.status === 401) {\r\n\t\t\t\t\tconsole.error('The token JWT is not valid, relogin required', error)\r\n\t\t\t\t\tthis.cookieMng.deleteCookie('user.jwt');\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('The call is not end correct', error)\r\n\t\t\t\t\tthis.jwt = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\n\n}\n","<div class=\"toolbar\">\n\t<div class=\"logo\"><a [href]=\"homeUrl\"><span>LOGO</span></a></div>\n\t<div class=\"offer\"><a href=\"/\"><span>OFFERS</span></a></div>\n\t\n\t<div *ngIf=\"!cookieJWT\" class=\"login\"><a [href]=\"loginUrl\"><span>LOGIN</span></a></div>\n\t<div *ngIf=\"cookieJWT\" class=\"logged\"><a [href]=\"userManagementUrl\">\n\t\t<img [src]=\"jwt.avatar\" [alt]=\"jwt.name\" />\n\t</a></div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\nexport const host = 'http://localhost:7070';\r\nexport const homePageUrl: string = 'http://localhost:8080';\r\nexport const urlHotelBase: string = 'http://localhost:8081';\r\nexport const loginPageUrl: string = \"http://localhost:7070\";\r\nexport const userManagementPageUrl: string = \"http://localhost:7071\";\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}